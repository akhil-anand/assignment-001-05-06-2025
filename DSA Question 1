DSA Given an array of integers, return the length of the longest increasing subsequence.
A subsequence is a sequence that can be derived from the array by deleting some or no elements
without changing the order of the remaining elements. For example, given the array [10, 9, 2, 5, 3, 7,
101, 18], the longest increasing subsequence is [2, 3, 7, 101], and its length is 4.

Ans:
function longestSequence(arr){
    let subSequence = []
    arr.forEach((value, index) => {
        if(value < arr[index + 1] && index <= (arr.length - 2)){
            subSequence.push(value)
        }
    })
    let lastDigit = Math.max(...arr.slice(arr.length - 2))
    if(lastDigit > subSequence[subSequence.length - 1]){
        subSequence.push(lastDigit)
    }
    return subSequence;
}
 
console.log(longestSequence([10, 9, 2, 5, 3, 7, 101, 18]))
